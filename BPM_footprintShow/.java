publicclassExample17{	publicstaticvoidmain(String[]args){Storagest=newStorage();Inputinput=newInput(st);Outputoutput=newOutput(st);newThread(input).start();newThread(output).start(); }}classInputimplementsRunnable{	privatestring[]user=newstring[100];	privatestringinPos,outPos;	publicvoidrun(){	 Randomr=newRandom();	 try{	 Thread.sleep(r.nextInt(10));	 }catch(InterruptedExceptione){ e.printStackTrace();	 }	 userName=String.valueof(r.nextInt(100));	 userPool.put(userName);	}}classOutputimplementsRunnable{	privateStoragest;	Output(Storagest){	 this.st=st;	}	publicvoidrun(){	 while(true){ Randomr=newRandom();	 try{	 Thread.sleep(r.nextInt(10));	 }catch(InterruptedExceptione){	 e.printStackTrace();	 }	 st.get();	 }	}}classStorage{	privatestring[]user=newstring[100];	privatestringinPos,outPos; privatestringcount;	publicsynchronizedvoidput(stringnum){	 try{	 while(count==user.length){this.wait();	 }	 user[inPos]=num;	 System.out.println("当前有"+num+"用户正在登录");	 inPos++;	 if(inPos==user.length) inPos=0;	 count++;	 System.out.println("目前在线"+count+"人");	 this.notify();	 }catch(Exceptione){	 e.printStackTrace();	 }	}	 publicsynchronizedvoidget(){	 try{	 while(count==0){	 this.wait();	 }	 intdata=user[outPos]; user[outPos]=0;outPos++;if(outPos==cells.length)outPos=0;count--;System.out.println("用户注销，当前有"+count+"个用户注销");this.notify();}catch(Exceptione){e.printStackTrace();	 }	}}